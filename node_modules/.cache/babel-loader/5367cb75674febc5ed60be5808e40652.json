{"ast":null,"code":"var _jsxFileName = \"/Users/john/covid-19-tracker/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { MenuItem, FormControl, Select } from '@material-ui/core';\nimport './App.css';\nimport infoBox from './infoBox';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [countries, setCountries] = useState([]);\n  const [country, setCountry] = useState([]); //STATE = how to write a variable in React\n  //USEEFFECT = runs a piece of code based on a given condition\n\n  useEffect(() => {\n    //async -> send a request, wait for it, do something with info\n    const getCountriesData = async () => {\n      await fetch(\"https://disease.sh/v3/covid-19/countries\").then(response => response.json()).then(data => {\n        const countries = data.map(country => ({\n          name: country.country,\n          value: country.countryInfo.iso2\n        }));\n        setCountries(countries);\n      });\n    };\n\n    getCountriesData();\n  }, []);\n\n  const onCountryChange = async event => {\n    const countryCode = event.target.value;\n    setCountry(countryCode);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app__header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"COVID19 TRACKER\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        className: \"app_dropdown\",\n        children: /*#__PURE__*/_jsxDEV(Select, {\n          variant: \"outlined\",\n          onChange: onCountryChange,\n          value: country,\n          children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"worldwide\",\n            children: \" Worldwide \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this), countries.map(country => /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: country.value,\n            children: [country.name, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app__stats\",\n      children: [/*#__PURE__*/_jsxDEV(\"infoBox\", {\n        title: \"Coronavirus Cases\",\n        cases: 123,\n        total: 2000\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"infoBox\", {\n        title: \"Recovered\",\n        cases: 1234,\n        total: 3000\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"infoBox\", {\n        title: \"Deaths\",\n        cases: 12345,\n        total: 4000\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"tKKOsbrttKe8/YYAchBpOGeEb6E=\");\n\n_c = App;\n{\n  /* Header */\n}\n{\n  /* Title + Select input dropdown field */\n}\n{\n  /* InfoBoxs */\n}\n{\n  /* InfoBoxs */\n}\n{\n  /* InfoBoxs */\n}\n{\n  /* Table */\n}\n{\n  /* Graph */\n}\n{\n  /* Map */\n}\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/john/covid-19-tracker/src/App.js"],"names":["useEffect","useState","MenuItem","FormControl","Select","infoBox","App","countries","setCountries","country","setCountry","getCountriesData","fetch","then","response","json","data","map","name","value","countryInfo","iso2","onCountryChange","event","countryCode","target"],"mappings":"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","sourcesContent":["import { useEffect, useState } from 'react';\nimport { MenuItem, FormControl, Select } from '@material-ui/core';\nimport './App.css';\nimport infoBox from './infoBox';\nfunction App() {\n\n  const [countries, setCountries] = useState([]);\n  const [country, setCountry] = useState([]);\n  //STATE = how to write a variable in React\n\n  //USEEFFECT = runs a piece of code based on a given condition\n\n  useEffect(() => {\n    //async -> send a request, wait for it, do something with info\n\n    const getCountriesData = async() => {\n      await fetch(\"https://disease.sh/v3/covid-19/countries\")\n        .then((response) => response.json())\n        .then((data) => {\n          const countries = data.map((country) => ({\n            name: country.country,\n            value: country.countryInfo.iso2\n          }));\n          setCountries(countries);\n        });\n    };\n    getCountriesData();\n  }, []);\n\n  const onCountryChange = async(event) => {\n    const countryCode = event.target.value;\n    \n    setCountry(countryCode);\n  }\n  return (\n    <div className=\"app\">\n      <div className=\"app__header\">\n        <h1>COVID19 TRACKER</h1>\n        <FormControl className = \"app_dropdown\">\n          <Select variant = \"outlined\" onChange = {onCountryChange} value = {country}>\n            <MenuItem value = \"worldwide\"> Worldwide </MenuItem>\n            {countries.map((country) => (\n              <MenuItem value = {country.value}>{country.name} </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n      </div>\n\n      <div className = \"app__stats\">\n        <infoBox title = \"Coronavirus Cases\" cases = {123} total ={2000}/> \n        <infoBox title = \"Recovered\" cases = {1234} total = {3000} />\n        <infoBox title = \"Deaths\" cases = {12345} total = {4000} />\n      </div>\n      </div>\n  );\n}\n{/* Header */}\n\n{/* Title + Select input dropdown field */}\n\n{/* InfoBoxs */}\n{/* InfoBoxs */}\n{/* InfoBoxs */}\n\n{/* Table */}\n{/* Graph */}\n\n{/* Map */}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}