{"ast":null,"code":"var _jsxFileName = \"/Users/john/covid-19-tracker/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { MenuItem, FormControl, Select, CardContent, Card } from '@material-ui/core';\nimport './App.css';\nimport Map from './Map';\nimport InfoBox from './infoBox';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [countries, setCountries] = useState([]);\n  const [country, setCountry] = useState([]); //STATE = how to write a variable in React\n  //USEEFFECT = runs a piece of code based on a given condition\n\n  useEffect(() => {\n    //async -> send a request, wait for it, do something with info\n    const getCountriesData = async () => {\n      await fetch(\"https://disease.sh/v3/covid-19/countries\").then(response => response.json()).then(data => {\n        const countries = data.map(country => ({\n          name: country.country,\n          value: country.countryInfo.iso2\n        }));\n        setCountries(countries);\n      });\n    };\n\n    getCountriesData();\n  }, []);\n\n  const onCountryChange = async event => {\n    const countryCode = event.target.value;\n    setCountry(countryCode);\n    const url = countryCode === \"worldwide\" ? \"https://disease.sh/v3/covid-19/countries/all\" : 'https://disease.sh/v3/covid-19/countries/${countryCode}';\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app__left\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app__header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"COVID19 TRACKER\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          className: \"app_dropdown\",\n          children: /*#__PURE__*/_jsxDEV(Select, {\n            variant: \"outlined\",\n            onChange: onCountryChange,\n            value: country,\n            children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"worldwide\",\n              children: \" Worldwide \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 17\n            }, this), countries.map(country => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: country.value,\n              children: [country.name, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app__stats\",\n        children: [/*#__PURE__*/_jsxDEV(InfoBox, {\n          title: \"Coronavirus Cases\",\n          cases: 123,\n          total: 2000\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(InfoBox, {\n          title: \"Recovered\",\n          cases: 1234,\n          total: 3000\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(InfoBox, {\n          title: \"Deaths\",\n          cases: 12345,\n          total: 4000\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Map, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      className: \"app__right\",\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Live Cases by Country\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Worldwide new cases\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 12\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"tKKOsbrttKe8/YYAchBpOGeEb6E=\");\n\n_c = App;\n{\n  /* Header */\n}\n{\n  /* Title + Select input dropdown field */\n}\n{\n  /* InfoBoxs */\n}\n{\n  /* InfoBoxs */\n}\n{\n  /* InfoBoxs */\n}\n{\n  /* Table */\n}\n{\n  /* Graph */\n}\n{\n  /* Map */\n}\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/john/covid-19-tracker/src/App.js"],"names":["useEffect","useState","MenuItem","FormControl","Select","CardContent","Card","Map","InfoBox","App","countries","setCountries","country","setCountry","getCountriesData","fetch","then","response","json","data","map","name","value","countryInfo","iso2","onCountryChange","event","countryCode","target","url"],"mappings":"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","sourcesContent":["import { useEffect, useState } from 'react';\nimport { MenuItem, FormControl, Select, CardContent, Card } from '@material-ui/core';\nimport './App.css';\nimport Map from './Map';\nimport InfoBox from './infoBox';\nfunction App() {\n\n  const [countries, setCountries] = useState([]);\n  const [country, setCountry] = useState([]);\n  //STATE = how to write a variable in React\n\n  //USEEFFECT = runs a piece of code based on a given condition\n\n  useEffect(() => {\n    //async -> send a request, wait for it, do something with info\n\n    const getCountriesData = async() => {\n      await fetch(\"https://disease.sh/v3/covid-19/countries\")\n        .then((response) => response.json())\n        .then((data) => {\n          const countries = data.map((country) => ({\n            name: country.country,\n            value: country.countryInfo.iso2\n          }));\n          setCountries(countries);\n        });\n    };\n    getCountriesData();\n  }, []);\n\n  const onCountryChange = async(event) => {\n    const countryCode = event.target.value;\n    \n    setCountry(countryCode);\n\n    const url = \n    countryCode === \"worldwide\"\n     ? \"https://disease.sh/v3/covid-19/countries/all\" \n     : 'https://disease.sh/v3/covid-19/countries/${countryCode}'\n  }\n  return (\n    <div className=\"app\">\n      <div className = \"app__left\">\n        <div className=\"app__header\">\n            <h1>COVID19 TRACKER</h1>\n            <FormControl className = \"app_dropdown\">\n              <Select variant = \"outlined\" onChange = {onCountryChange} value = {country}>\n                <MenuItem value = \"worldwide\"> Worldwide </MenuItem>\n                {countries.map((country) => (\n                  <MenuItem value = {country.value}>{country.name} </MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n          </div>\n\n          <div className = \"app__stats\">\n            <InfoBox title = \"Coronavirus Cases\" cases = {123} total ={2000}/> \n            <InfoBox title = \"Recovered\" cases = {1234} total = {3000} />\n            <InfoBox title = \"Deaths\" cases = {12345} total = {4000} />\n          </div>\n\n          <Map />\n        </div>\n\n      <Card className = \"app__right\">\n        <CardContent>\n           {/*table */}\n\n           <h3>Live Cases by Country</h3>\n           {/*Graph */}\n\n           <h3>Worldwide new cases</h3>\n        </CardContent>\n      </Card>\n      </div>\n  );\n}\n{/* Header */}\n\n{/* Title + Select input dropdown field */}\n\n{/* InfoBoxs */}\n{/* InfoBoxs */}\n{/* InfoBoxs */}\n\n{/* Table */}\n{/* Graph */}\n\n{/* Map */}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}